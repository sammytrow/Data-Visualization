file.copy(from=plots.png.paths, to="C:\Users\Sammy\Documents\Uni\Semester 2\DALT7016 - Data Visualization\Assignment\Data\plots")
file.copy(from=plots.png.paths, to="C:/Users/Sammy/Documents/Uni/Semester 2/DALT7016 - Data Visualization/Assignment/Data/plots")
file.copy(from=plots.png.paths, to="C:/Users/Sammy/Documents/Uni/Semester 2/DALT7016 - Data Visualization/Assignment/Data/plots")
source("~/Uni/Semester 2/DALT7016 - Data Visualization/Assignment/coral_bleaching_data_visualization.R", echo=TRUE)
plots.dir.path <- list.files(tempdir(), pattern="rs-graphics", full.names = TRUE);
plots.png.paths <- list.files(plots.dir.path, pattern=".png", full.names = TRUE)
file.copy(from=plots.png.paths, to="C:/Users/Sammy/Documents/Uni/Semester 2/DALT7016 - Data Visualization/Assignment/Data/plots")
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
library(ggplot2)
ggplot(iris, aes(x = Petal.Width, y = Petal.Length, colour = Species)) +
geom_point()
library(ggplot2)
ggplot(iris, aes(x = Petal.Width, fill = Species)) +
geom_histogram()
library(tidyverse)
library(ggplot2)
library(sf)
library(rworldmap)
library(dplyr)
library(gganimate)
library(ggridges)
library(viridis)
library(hrbrthemes)
worldmap <- getMap(resolution = "coarse")
this.dir <- dirname(parent.frame(2)$ofile)
library(tidyverse)
library(ggplot2)
library(sf)
library(rworldmap)
library(dplyr)
library(gganimate)
library(ggridges)
library(viridis)
library(hrbrthemes)
worldmap <- getMap(resolution = "coarse")
this.dir <- dirname(parent.frame(2)$ofile)
setwd(getSrcDirectory()[1])
library(tidyverse)
library(ggplot2)
library(sf)
library(rworldmap)
library(dplyr)
library(gganimate)
library(ggridges)
library(viridis)
library(hrbrthemes)
worldmap <- getMap(resolution = "coarse")
this.dir <- dirname(parent.frame(2)$ofile)
library(tidyverse)
library(ggplot2)
library(sf)
library(rworldmap)
library(dplyr)
library(gganimate)
library(ggridges)
library(viridis)
library(hrbrthemes)
this.dir <- dirname(parent.frame(2)$ofile)
library(tidyverse)
library(ggplot2)
library(sf)
library(rworldmap)
library(dplyr)
library(gganimate)
library(ggridges)
library(viridis)
library(hrbrthemes)
current_path = rstudioapi::getActiveDocumentContext()$path
setwd(dirname(current_path ))
print( getwd() )
worldmap <- getMap(resolution = "coarse")
temperature_data <- read.csv("Data/Environmental_tbl.csv")
prep <- read.csv("Data/Query 1_Summary_Bleaching_Cover1.csv")
prep %>% count(Severity_Code, sort = TRUE)
prep %>% count(Percent_Bleached_Sum, sort = TRUE)
coral_data <- read.csv("Data/Query 1_Summary_Bleaching_Cover.csv")
typeof(coral_data)
coral_data <- coral_data[!apply(is.na(coral_data) | coral_data == "", 1, all),]
print(summary(coral_data))
print(head(coral_data))
coral_data %>% count(Severity_range, sort = TRUE)
ggplot(coral_data, aes(Date_Year, after_stat(count), fill = Severity_range)) +
geom_density(position = "stack")
ggplot(coral_data, aes(Country_code, after_stat(count), color=Country_code)) +
geom_histogram(stat="count") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),legend.position="none")
tmp = coral_data
tmp$Country_Name	 = tolower(gsub('\\s+', '', tmp$Country_Name))
tmp$Site_Name	 = tolower(gsub('\\s+', '', tmp$Site_Name))
yearly_coral_checks <- tmp %>% distinct(Date_Year, Country_Name, Site_Name, .keep_all = TRUE)
yearly_coral_checks <- yearly_coral_checks %>% distinct(Date_Year, Latitude_Degrees, Longitude_Degrees, .keep_all = TRUE)
tmp$COUNTRY = tolower(gsub('\\s+', '', tmp$Country_Name))
yearly_country_action <- tmp %>% distinct(Date_Year, tolower(Country_Name), .keep_all = TRUE)
ggplot(yearly_country_action, aes(x = Date_Year), group=1) +
stat_count(width = 0.5)
years = unique(sort(coral_data$Date_Year))
get_yearly_plot <- function(set, year){
world <- map_data("world")
templot = ggplot() +
geom_map(
data = world, map = world,
aes(long, lat, map_id = region), size = 0.1
) +
geom_point(
data = set,
aes(as.numeric(Longitude_Degrees), as.numeric(Latitude_Degrees), color = as.factor(Severity_range), shape = as.factor(Severity_range)),
alpha = 3
) +
scale_colour_manual(name="Bleaching Severity",
values = c("green", "blue", "orange","red"),
breaks=c("% unknown", "Mild (1-10% Bleached)", "Moderate (11-50% Bleached)", "Severe (>50% Bleached)"),
drop=FALSE) +
scale_shape_manual(name="Bleaching Severity",
values = c(15, 17, 13, 11),
breaks=c("% unknown", "Mild (1-10% Bleached)", "Moderate (11-50% Bleached)", "Severe (>50% Bleached)"),
drop=FALSE) +
ggtitle(paste("Bleaching Severity ", year))
return (templot)
}
the_worldo <- function(data, year_list){
for(y in as.factor(year_list)){
if(y != "Date_Year" && y != ""){
temp_data = subset(data[which(as.factor(data$Date_Year) == y), ],!(Severity_Code %in% c(0)))
print(get_yearly_plot(temp_data, y))
}
}
}
print(the_worldo(coral_data, years))
THEGREATBARRIERREEF = subset(coral_data, Latitude_Degrees > -22.44 & Latitude_Degrees < -9.23)
THEGREATBARRIERREEF = subset(THEGREATBARRIERREEF, Longitude_Degrees > 142.93 & Longitude_Degrees < 152.82)
merged_barrier = merge(THEGREATBARRIERREEF, temperature_data, by = c("Sample_ID"))
ggplot(merged_barrier, aes(x = Temperature_Maximum, y = as.factor(Date_Year), fill = ..x..)) +
geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01) +
scale_fill_viridis(name = "Temp. [Kelvin]", option = "C") +
labs(title = 'Maximum Temperatures at The Great Barrier Reef from 1992 - 2017') +
theme_ipsum() +
theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
) +
xlab("Temperature")+
ylab("Years")
ggplot(merged_barrier, aes(x = Temperature_Kelvin, y = as.factor(Date_Year), fill = ..x..)) +
geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01) +
scale_fill_viridis(name = "Temp. [Kelvin]", option = "C") +
labs(title = 'Temperatures at The Great Barrier Reef from 1992 - 2017') +
theme_ipsum() +
theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
) +
xlab("Temperature")+
ylab("Years")
merged = merge(coral_data, temperature_data, by = c("Sample_ID"))
# Plot
merged %>% count(Date_Year)
merged %>% count(Date_Year, Date_Month)
ggplot(merged, aes(x = Temperature_Kelvin, y = as.factor(Date_Year), fill = ..x..)) +
geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01) +
scale_fill_viridis(name = "Temp. [Kelvin]", option = "C") +
labs(title = 'World Ocean Temperatures from 1980 - 2019') +
theme_ipsum() +
theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
) +
xlab("Temperature")+
ylab("Years")
library(tidyverse)
library(ggplot2)
library(sf)
library(rworldmap)
library(dplyr)
library(gganimate)
library(ggridges)
library(viridis)
library(hrbrthemes)
current_path = rstudioapi::getActiveDocumentContext()$path
setwd(dirname(current_path ))
worldmap <- getMap(resolution = "coarse")
temperature_data <- read.csv("Data/Environmental_tbl.csv")
prep <- read.csv("Data/Query 1_Summary_Bleaching_Cover1.csv")
prep %>% count(Severity_Code, sort = TRUE)
prep %>% count(Percent_Bleached_Sum, sort = TRUE)
coral_data <- read.csv("Data/Query 1_Summary_Bleaching_Cover.csv")
typeof(coral_data)
coral_data <- coral_data[!apply(is.na(coral_data) | coral_data == "", 1, all),]
print(summary(coral_data))
print(head(coral_data))
coral_data %>% count(Severity_range, sort = TRUE)
ggplot(coral_data, aes(Date_Year, after_stat(count), fill = Severity_range)) +
geom_density(position = "stack")
ggplot(coral_data, aes(Country_code, after_stat(count), color=Country_code)) +
geom_histogram(stat="count") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),legend.position="none")
tmp = coral_data
tmp$Country_Name	 = tolower(gsub('\\s+', '', tmp$Country_Name))
tmp$Site_Name	 = tolower(gsub('\\s+', '', tmp$Site_Name))
yearly_coral_checks <- tmp %>% distinct(Date_Year, Country_Name, Site_Name, .keep_all = TRUE)
yearly_coral_checks <- yearly_coral_checks %>% distinct(Date_Year, Latitude_Degrees, Longitude_Degrees, .keep_all = TRUE)
tmp$COUNTRY = tolower(gsub('\\s+', '', tmp$Country_Name))
yearly_country_action <- tmp %>% distinct(Date_Year, tolower(Country_Name), .keep_all = TRUE)
ggplot(yearly_country_action, aes(x = Date_Year), group=1) +
stat_count(width = 0.5)
years = unique(sort(coral_data$Date_Year))
get_yearly_plot <- function(set, year){
world <- map_data("world")
templot = ggplot() +
geom_map(
data = world, map = world,
aes(long, lat, map_id = region), size = 0.1
) +
geom_point(
data = set,
aes(as.numeric(Longitude_Degrees), as.numeric(Latitude_Degrees), color = as.factor(Severity_range), shape = as.factor(Severity_range)),
alpha = 3
) +
scale_colour_manual(name="Bleaching Severity",
values = c("green", "blue", "orange","red"),
breaks=c("% unknown", "Mild (1-10% Bleached)", "Moderate (11-50% Bleached)", "Severe (>50% Bleached)"),
drop=FALSE) +
scale_shape_manual(name="Bleaching Severity",
values = c(15, 17, 13, 11),
breaks=c("% unknown", "Mild (1-10% Bleached)", "Moderate (11-50% Bleached)", "Severe (>50% Bleached)"),
drop=FALSE) +
ggtitle(paste("Bleaching Severity ", year))
return (templot)
}
the_worldo <- function(data, year_list){
for(y in as.factor(year_list)){
if(y != "Date_Year" && y != ""){
temp_data = subset(data[which(as.factor(data$Date_Year) == y), ],!(Severity_Code %in% c(0)))
print(get_yearly_plot(temp_data, y))
}
}
}
print(the_worldo(coral_data, years))
THEGREATBARRIERREEF = subset(coral_data, Latitude_Degrees > -22.44 & Latitude_Degrees < -9.23)
THEGREATBARRIERREEF = subset(THEGREATBARRIERREEF, Longitude_Degrees > 142.93 & Longitude_Degrees < 152.82)
merged_barrier = merge(THEGREATBARRIERREEF, temperature_data, by = c("Sample_ID"))
ggplot(merged_barrier, aes(x = Temperature_Maximum, y = as.factor(Date_Year), fill = ..x..)) +
geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01) +
scale_fill_viridis(name = "Temp. [Kelvin]", option = "C") +
labs(title = 'Maximum Temperatures at The Great Barrier Reef from 1992 - 2017') +
theme_ipsum() +
theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
) +
xlab("Temperature")+
ylab("Years")
ggplot(merged_barrier, aes(x = Temperature_Kelvin, y = as.factor(Date_Year), fill = ..x..)) +
geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01) +
scale_fill_viridis(name = "Temp. [Kelvin]", option = "C") +
labs(title = 'Temperatures at The Great Barrier Reef from 1992 - 2017') +
theme_ipsum() +
theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
) +
xlab("Temperature")+
ylab("Years")
merged = merge(coral_data, temperature_data, by = c("Sample_ID"))
# Plot
merged %>% count(Date_Year)
merged %>% count(Date_Year, Date_Month)
ggplot(merged, aes(x = Temperature_Kelvin, y = as.factor(Date_Year), fill = ..x..)) +
geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01) +
scale_fill_viridis(name = "Temp. [Kelvin]", option = "C") +
labs(title = 'World Ocean Temperatures from 1980 - 2019') +
theme_ipsum() +
theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
) +
xlab("Temperature")+
ylab("Years")
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(tidyverse)
library(ggplot2)
library(sf)
library(rworldmap)
library(dplyr)
library(gganimate)
library(ggridges)
library(viridis)
library(hrbrthemes)
current_path = rstudioapi::getActiveDocumentContext()$path
setwd(dirname(current_path ))
worldmap <- getMap(resolution = "coarse")
temperature_data <- read.csv("Data/Environmental_tbl.csv")
prep <- read.csv("Data/Query 1_Summary_Bleaching_Cover1.csv")
prep %>% count(Severity_Code, sort = TRUE)
prep %>% count(Percent_Bleached_Sum, sort = TRUE)
coral_data <- read.csv("Data/Query 1_Summary_Bleaching_Cover.csv")
typeof(coral_data)
coral_data <- coral_data[!apply(is.na(coral_data) | coral_data == "", 1, all),]
print(summary(coral_data))
print(head(coral_data))
coral_data %>% count(Severity_range, sort = TRUE)
ggplot(coral_data, aes(Date_Year, after_stat(count), fill = Severity_range)) +
geom_density(position = "stack")
ggplot(coral_data, aes(Country_code, after_stat(count), color=Country_code)) +
geom_histogram(stat="count") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),legend.position="none")
tmp = coral_data
tmp$Country_Name	 = tolower(gsub('\\s+', '', tmp$Country_Name))
tmp$Site_Name	 = tolower(gsub('\\s+', '', tmp$Site_Name))
yearly_coral_checks <- tmp %>% distinct(Date_Year, Country_Name, Site_Name, .keep_all = TRUE)
yearly_coral_checks <- yearly_coral_checks %>% distinct(Date_Year, Latitude_Degrees, Longitude_Degrees, .keep_all = TRUE)
tmp$COUNTRY = tolower(gsub('\\s+', '', tmp$Country_Name))
yearly_country_action <- tmp %>% distinct(Date_Year, tolower(Country_Name), .keep_all = TRUE)
ggplot(yearly_country_action, aes(x = Date_Year), group=1) +
stat_count(width = 0.5)
years = unique(sort(coral_data$Date_Year))
get_yearly_plot <- function(set, year){
world <- map_data("world")
templot = ggplot() +
geom_map(
data = world, map = world,
aes(long, lat, map_id = region), size = 0.1
) +
geom_point(
data = set,
aes(as.numeric(Longitude_Degrees), as.numeric(Latitude_Degrees), color = as.factor(Severity_range), shape = as.factor(Severity_range)),
alpha = 3
) +
scale_colour_manual(name="Bleaching Severity",
values = c("green", "blue", "orange","red"),
breaks=c("% unknown", "Mild (1-10% Bleached)", "Moderate (11-50% Bleached)", "Severe (>50% Bleached)"),
drop=FALSE) +
scale_shape_manual(name="Bleaching Severity",
values = c(15, 17, 13, 11),
breaks=c("% unknown", "Mild (1-10% Bleached)", "Moderate (11-50% Bleached)", "Severe (>50% Bleached)"),
drop=FALSE) +
ggtitle(paste("Bleaching Severity ", year))
return (templot)
}
the_worldo <- function(data, year_list){
for(y in as.factor(year_list)){
if(y != "Date_Year" && y != ""){
temp_data = subset(data[which(as.factor(data$Date_Year) == y), ],!(Severity_Code %in% c(0)))
print(get_yearly_plot(temp_data, y))
}
}
}
print(the_worldo(coral_data, years))
THEGREATBARRIERREEF = subset(coral_data, Latitude_Degrees > -22.44 & Latitude_Degrees < -9.23)
THEGREATBARRIERREEF = subset(THEGREATBARRIERREEF, Longitude_Degrees > 142.93 & Longitude_Degrees < 152.82)
merged_barrier = merge(THEGREATBARRIERREEF, temperature_data, by = c("Sample_ID"))
ggplot(merged_barrier, aes(x = Temperature_Maximum, y = as.factor(Date_Year), fill = ..x..)) +
geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01) +
scale_fill_viridis(name = "Temp. [Kelvin]", option = "C") +
labs(title = 'Maximum Temperatures at The Great Barrier Reef from 1992 - 2017') +
theme_ipsum() +
theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
) +
xlab("Temperature")+
ylab("Years")
ggplot(merged_barrier, aes(x = Temperature_Kelvin, y = as.factor(Date_Year), fill = ..x..)) +
geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01) +
scale_fill_viridis(name = "Temp. [Kelvin]", option = "C") +
labs(title = 'Temperatures at The Great Barrier Reef from 1992 - 2017') +
theme_ipsum() +
theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
) +
xlab("Temperature")+
ylab("Years")
merged = merge(coral_data, temperature_data, by = c("Sample_ID"))
# Plot
merged %>% count(Date_Year)
merged %>% count(Date_Year, Date_Month)
ggplot(merged, aes(x = Temperature_Kelvin, y = as.factor(Date_Year), fill = ..x..)) +
geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01) +
scale_fill_viridis(name = "Temp. [Kelvin]", option = "C") +
labs(title = 'World Ocean Temperatures from 1980 - 2019') +
theme_ipsum() +
theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
) +
xlab("Temperature")+
ylab("Years")
source("~/Uni/Semester 2/DALT7016 - Data Visualization/Assignment/coral_bleaching_data_visualization.R", echo=TRUE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(tidyverse)
library(ggplot2)
library(sf)
library(rworldmap)
library(dplyr)
library(gganimate)
library(ggridges)
library(viridis)
library(hrbrthemes)
current_path = rstudioapi::getActiveDocumentContext()$path
setwd(dirname(current_path ))
worldmap <- getMap(resolution = "coarse")
temperature_data <- read.csv("Data/Environmental_tbl.csv")
prep <- read.csv("Data/Query 1_Summary_Bleaching_Cover1.csv")
prep %>% count(Severity_Code, sort = TRUE)
prep %>% count(Percent_Bleached_Sum, sort = TRUE)
coral_data <- read.csv("Data/Query 1_Summary_Bleaching_Cover.csv")
typeof(coral_data)
coral_data <- coral_data[!apply(is.na(coral_data) | coral_data == "", 1, all),]
print(summary(coral_data))
print(head(coral_data))
coral_data %>% count(Severity_range, sort = TRUE)
ggplot(coral_data, aes(Date_Year, after_stat(count), fill = Severity_range)) +
geom_density(position = "stack")
ggplot(coral_data, aes(Country_code, after_stat(count), color=Country_code)) +
geom_histogram(stat="count") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),legend.position="none")
tmp = coral_data
tmp$Country_Name	 = tolower(gsub('\\s+', '', tmp$Country_Name))
tmp$Site_Name	 = tolower(gsub('\\s+', '', tmp$Site_Name))
yearly_coral_checks <- tmp %>% distinct(Date_Year, Country_Name, Site_Name, .keep_all = TRUE)
yearly_coral_checks <- yearly_coral_checks %>% distinct(Date_Year, Latitude_Degrees, Longitude_Degrees, .keep_all = TRUE)
tmp$COUNTRY = tolower(gsub('\\s+', '', tmp$Country_Name))
yearly_country_action <- tmp %>% distinct(Date_Year, tolower(Country_Name), .keep_all = TRUE)
ggplot(yearly_country_action, aes(x = Date_Year), group=1) +
stat_count(width = 0.5)
years = unique(sort(coral_data$Date_Year))
get_yearly_plot <- function(set, year){
world <- map_data("world")
templot = ggplot() +
geom_map(
data = world, map = world,
aes(long, lat, map_id = region), size = 0.1
) +
geom_point(
data = set,
aes(as.numeric(Longitude_Degrees), as.numeric(Latitude_Degrees), color = as.factor(Severity_range), shape = as.factor(Severity_range)),
alpha = 3
) +
scale_colour_manual(name="Bleaching Severity",
values = c("green", "blue", "orange","red"),
breaks=c("% unknown", "Mild (1-10% Bleached)", "Moderate (11-50% Bleached)", "Severe (>50% Bleached)"),
drop=FALSE) +
scale_shape_manual(name="Bleaching Severity",
values = c(15, 17, 13, 11),
breaks=c("% unknown", "Mild (1-10% Bleached)", "Moderate (11-50% Bleached)", "Severe (>50% Bleached)"),
drop=FALSE) +
ggtitle(paste("Bleaching Severity ", year))
return (templot)
}
the_worldo <- function(data, year_list){
for(y in as.factor(year_list)){
if(y != "Date_Year" && y != ""){
temp_data = subset(data[which(as.factor(data$Date_Year) == y), ],!(Severity_Code %in% c(0)))
print(get_yearly_plot(temp_data, y))
}
}
}
print(the_worldo(coral_data, years))
THEGREATBARRIERREEF = subset(coral_data, Latitude_Degrees > -22.44 & Latitude_Degrees < -9.23)
THEGREATBARRIERREEF = subset(THEGREATBARRIERREEF, Longitude_Degrees > 142.93 & Longitude_Degrees < 152.82)
merged_barrier = merge(THEGREATBARRIERREEF, temperature_data, by = c("Sample_ID"))
ggplot(merged_barrier, aes(x = Temperature_Maximum, y = as.factor(Date_Year), fill = ..x..)) +
geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01) +
scale_fill_viridis(name = "Temp. [Kelvin]", option = "C") +
labs(title = 'Maximum Temperatures at The Great Barrier Reef from 1992 - 2017') +
theme_ipsum() +
theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
) +
xlab("Temperature")+
ylab("Years")
ggplot(merged_barrier, aes(x = Temperature_Kelvin, y = as.factor(Date_Year), fill = ..x..)) +
geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01) +
scale_fill_viridis(name = "Temp. [Kelvin]", option = "C") +
labs(title = 'Temperatures at The Great Barrier Reef from 1992 - 2017') +
theme_ipsum() +
theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
) +
xlab("Temperature")+
ylab("Years")
merged = merge(coral_data, temperature_data, by = c("Sample_ID"))
# Plot
merged %>% count(Date_Year)
merged %>% count(Date_Year, Date_Month)
ggplot(merged, aes(x = Temperature_Kelvin, y = as.factor(Date_Year), fill = ..x..)) +
geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01) +
scale_fill_viridis(name = "Temp. [Kelvin]", option = "C") +
labs(title = 'World Ocean Temperatures from 1980 - 2019') +
theme_ipsum() +
theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
) +
xlab("Temperature")+
ylab("Years")
